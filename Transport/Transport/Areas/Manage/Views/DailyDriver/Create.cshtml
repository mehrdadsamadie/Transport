@model Transport.Areas.Manage.Models.DailyDriverViewModel

@{
    var now = Tavanmand.Classes.PersianCalendarConverter.MiladiToFarsiDate(DateTime.Now, false, null);
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "ایجاد کارکرد";
}

<link href="~/Content/PersianDatePicker.min.css" rel="stylesheet" />
<link href="~/Content/timepicki.css" rel="stylesheet" />
<div class="content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container-fluid">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading" id="toolbar">
                        <div style="float:right">
                            <h4 class="title">تعریف کارکرد روزانه جدید</h4>
                            <p class="category">اطلاعات کارکرد را وارد نمایید</p>
                        </div>
                        <div>
                            <input type="submit" value="ذخیره" class="btn btn-success" />
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="card-content">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="col-md-12" style="float:right">
                                <div class="form-group label-floating is-empty">
                                    <label>
                                        @Html.LabelFor(model => model.DriverId, htmlAttributes: new { @class = "control-label" })
                                    </label>
                                    <br />
                                    <input id="SearchString" placeholder="" name="SearchString" type="text" value="" style="border:none;border-bottom:1px solid #ddd;width:100%;padding:8px" />
                                    @Html.EditorFor(model => model.DriverId, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.DriverName)
                                </div>
                            </div>
                            <div style="border-top:1px dotted #D2D2D2;margin-top:35px" class="clear"></div>
                            <div class="col-md-12" style="float:right">
                                <div class="form-group label-floating is-empty">
                                    <label>
                                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })
                                    </label>

                                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { onclick = "PersianDatePicker.Show(this,'" + now + "'); ", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6" style="float:right">
                                <div class="form-group label-floating is-empty">
                                    <label>
                                        @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label" })
                                    </label>

                                    @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control time_element_dilay" } })
                                    @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6" style="float:right">
                                <div class="form-group label-floating is-empty">
                                    <label>
                                        @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label" })
                                    </label>

                                    @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control time_element_dilay" } })
                                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="clear"></div>
                            <div class="col-md-6" style="float:right">
                                <div class="form-group label-floating is-empty">
                                    <label>
                                        @Html.LabelFor(model => model.DelayHours, htmlAttributes: new { @class = "control-label" })
                                    </label>
                                    @Html.EditorFor(model => model.DelayHours, new { htmlAttributes = new { @class = "form-control time_element_dilay" } })
                                    @Html.ValidationMessageFor(model => model.DelayHours, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6" style="float:right">
                                <div class="form-group label-floating is-empty">
                                    <label>
                                        @Html.LabelFor(model => model.RushHours, htmlAttributes: new { @class = "control-label" })
                                    </label>

                                    @Html.EditorFor(model => model.RushHours, new { htmlAttributes = new { @class = "form-control time_element_dilay" } })
                                    @Html.ValidationMessageFor(model => model.RushHours, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="clear"></div>

                            <div class="col-md-6" style="float:right">
                                <div class="form-group label-floating is-empty">
                                    <label>
                                        @Html.LabelFor(model => model.DeductionsTotal, htmlAttributes: new { @class = "control-label" })
                                    </label>
                                    @Html.EditorFor(model => model.DeductionsTotal, new { htmlAttributes = new { @class = "form-control time_element_dilay" } })
                                    @Html.ValidationMessageFor(model => model.DeductionsTotal, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6" style="float:right">
                                <div class="form-group label-floating is-empty">
                                    <label>
                                        @Html.LabelFor(model => model.AbsentHours, htmlAttributes: new { @class = "control-label" })
                                    </label>
                                    @Html.EditorFor(model => model.AbsentHours, new { htmlAttributes = new { @class = "form-control time_element_dilay" } })
                                    @Html.ValidationMessageFor(model => model.AbsentHours, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="clear"></div>
                            <div style="border-top:1px dotted #D2D2D2;margin-top:50px" class="clear"></div>
                            <div class="col-md-6" style="float:right">
                                <div class="form-group label-floating is-empty">
                                    @Html.DropDownListFor(model => model.StatusTypeId, new SelectList(ViewBag.StatusTypes, "Value", "Text"), "وضعیت راننده را انتخاب نمایید", new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.StatusTypeId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6" style="float:right">
                                <div class="form-group label-floating is-empty">
                                    @Html.DropDownListFor(model => model.DriverTypeId, new SelectList(ViewBag.DriverTypes, "Value", "Text"), "نوع راننده را مشخص نمایید", new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DriverTypeId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                <div class="Gotoback">
                    @Html.ActionLink("بازگشت به لیست قبلی", "Index")
                    <i class="fa fa-arrow-left" aria-hidden="true"></i>
                </div>
            </div>
        </div>

    }
</div>
@section scripts
{
    <script src="~/Content/material.min.js"></script>
    <script src="~/Content/material-dashboard.js"></script>
    <script src="~/Scripts/timepicki.js"></script>
    <script src="~/Scripts/PersianDatePicker.js"></script>
    <script>
        $(document).ready(function () {

            var ID = $("#DriverId").val();
            if (ID != null) {
                var Name = $("#DriverName").val();
                $("#SearchString").val(Name);
            }


            $("#SearchString").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Manage/Driver/AutoPersonel",
                        type: "POST",
                        dataType: "json",
                        data: { searchString: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                $("#DriverId").val(item.Id);
                                return { label: item.FullName, value: item.FullName };
                            }))
                        }
                    })
                },
                messages: {
                    noResults: "", results: ""
                }
            });
            $(document).ready(function () {
                $(".time_element_dilay").timepicki({ show_meridian: false });;
            });

        })
    </script>
}
